name: Playwright FlakerFinder CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-comparison:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js LTS
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Verify Node.js version
      run: |
        echo "Node.js version: $(node --version)"
        echo "npm version: $(npm --version)"

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Run Performance Comparison
      run: npm run test:compare
      continue-on-error: true
      env:
        CI: true

    - name: Generate Performance Report
      run: |
        echo "## 🚀 Performance Comparison Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "performance-report.json" ]; then
          echo "### Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Mode | Duration | Load Times | Throttling | Pass Rate |" >> $GITHUB_STEP_SUMMARY
          echo "|------|----------|------------|------------|-----------|" >> $GITHUB_STEP_SUMMARY
          
          # Extract data from JSON report using Node.js
          LOCAL_DURATION=$(node -p "Math.round(require('./performance-report.json').local.duration/1000)")
          CI_DURATION=$(node -p "Math.round(require('./performance-report.json').ci.duration/1000)")
          LOCAL_PASSED=$(node -p "require('./performance-report.json').local.metrics.testResults.passed")
          LOCAL_FAILED=$(node -p "require('./performance-report.json').local.metrics.testResults.failed")
          CI_PASSED=$(node -p "require('./performance-report.json').ci.metrics.testResults.passed")
          CI_FAILED=$(node -p "require('./performance-report.json').ci.metrics.testResults.failed")
          LOCAL_LOAD=$(node -p "require('./performance-report.json').local.metrics.loadTimes.length > 0 ? Math.round(require('./performance-report.json').local.metrics.loadTimes.reduce((a,b)=>a+b,0)/require('./performance-report.json').local.metrics.loadTimes.length) : 'N/A'")
          CI_LOAD=$(node -p "require('./performance-report.json').ci.metrics.loadTimes.length > 0 ? Math.round(require('./performance-report.json').ci.metrics.loadTimes.reduce((a,b)=>a+b,0)/require('./performance-report.json').ci.metrics.loadTimes.length) : 'N/A'")
          THROTTLING=$(node -p "require('./performance-report.json').ci.metrics.throttlingApplied ? '✅ Yes' : '❌ No'")
          
          # Calculate pass rates using Node.js
          LOCAL_RATE=$(node -p "const data = require('./performance-report.json').local.metrics.testResults; const total = data.passed + data.failed; total > 0 ? ((data.passed / total) * 100).toFixed(1) : 'N/A'")
          CI_RATE=$(node -p "const data = require('./performance-report.json').ci.metrics.testResults; const total = data.passed + data.failed; total > 0 ? ((data.passed / total) * 100).toFixed(1) : 'N/A'")
          
          echo "| Local Headless | ${LOCAL_DURATION}s | ${LOCAL_LOAD}ms | ❌ No | ${LOCAL_RATE}% |" >> $GITHUB_STEP_SUMMARY
          echo "| CI Mode | ${CI_DURATION}s | ${CI_LOAD}ms | ${THROTTLING} | ${CI_RATE}% |" >> $GITHUB_STEP_SUMMARY
        else
          echo "### Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Mode | Environment | Performance | Expected Behavior |" >> $GITHUB_STEP_SUMMARY
          echo "|------|-------------|-------------|-------------------|" >> $GITHUB_STEP_SUMMARY
          echo "| **Local Headless** | Full desktop performance | Fast (~2-3s) | Should pass most tests |" >> $GITHUB_STEP_SUMMARY
          echo "| **CI Mode** | Throttled (2x CPU, 3Mbps, 100ms latency) | Slow (~60s+) | Should demonstrate flakiness |" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Key Insights" >> $GITHUB_STEP_SUMMARY
        echo "- **Local Development**: Tests run fast with full resources" >> $GITHUB_STEP_SUMMARY
        echo "- **CI Environment**: Throttled conditions cause realistic flakiness" >> $GITHUB_STEP_SUMMARY
        echo "- **Flakiness Demo**: Perfect example of 'works on my machine' problem" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Environment Configuration" >> $GITHUB_STEP_SUMMARY
        echo "- Node.js: LTS 22 (specified in .nvmrc)" >> $GITHUB_STEP_SUMMARY
        echo "- CPU: 2x slower than normal" >> $GITHUB_STEP_SUMMARY
        echo "- Network: 3 Mbps down, 1.5 Mbps up" >> $GITHUB_STEP_SUMMARY
        echo "- Latency: 100ms" >> $GITHUB_STEP_SUMMARY
        echo "- Connection: 4G cellular" >> $GITHUB_STEP_SUMMARY

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Upload test results (raw)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results/
        retention-days: 30
