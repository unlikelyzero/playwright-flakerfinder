name: Playwright FlakerFinder CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.56.1-jammy
      options: --user 1001

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  flake-detection:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.56.1-jammy
      options: --user 1001

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch base branch for comparison
        run: |
          git fetch origin main:main || true

      - name: Setup Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Flake Testing for Changed Tests
        run: npm run test:flake-new
        continue-on-error: false
        env:
          CI: true

      - name: Upload flake test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: flake-test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 30

  test-comparison:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.56.1-jammy
      options: --user 1001

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Verify Node.js version
        run: |
          echo "Node.js version: $(node --version)"
          echo "npm version: $(npm --version)"

      - name: Install dependencies
        run: npm ci

      - name: Run CI Mode Tests (Actual CI Environment)
        run: npm run test:local-headless
        continue-on-error: true
        env:
          CI: true

      - name: Generate CI Performance Data
        run: node scripts/capture-ci-performance.js

      - name: Generate CI Performance Report
        run: bash scripts/generate-ci-report.sh

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test results (raw)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 30

      - name: Upload CI performance data
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ci-performance-data
          path: ci-performance-report.json
          retention-days: 90
